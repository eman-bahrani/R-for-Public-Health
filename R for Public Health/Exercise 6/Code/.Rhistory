bmi_category='Categorical body mass index')
# Read BMI data for 2017 - 2018 Cycle
bmi17_18 <- read_xpt("../Data/BMX_J.XPT")  %>%
clean_names() %>%
select(seqn, bmxwt, bmxht) %>%
rename(weight = bmxwt,
height = bmxht)  %>%
mutate(bmi=weight/(height/100)^2)  %>%
mutate(bmi_category = case_when(
bmi < 18.5 ~ "underweight",
bmi >= 18.5 & bmi < 24.9 ~ "normal weight",
bmi >= 25 & bmi < 29.9 ~ "overweight",
bmi >= 30 ~ "obese"
)) %>%
set_variable_labels(bmi='Body mass index',
bmi_category='Categorical body mass index')
# Combine BMI data
bmi_all <- union(bmi15_16, bmi17_18)
# Combine all data
all <- demo_all %>%
left_join(bpc_all, by = "seqn") %>%
left_join(bmi_all, by = "seqn")
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point()
ggplot(data = all, aes(x = bmi, y = weight, colour = age)) +
geom_point(size = 3, shape = 16, alpha = 0.8) +
scale_colour_gradient(low = "skyblue", high = "darkblue") +
labs(title = "BMI vs Weight",
subtitle = "Coloured by Age",
x = "Body Mass Index (BMI)",
y = "Weight (kg)",
colour = "Age") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.title = element_text(face = "bold"))
all <- all %>%
mutate(age_category = case_when(
age < 18 ~ "Under 18",
age >= 18 & age < 30 ~ "18-29",
age >= 30 & age < 45 ~ "30-44",
age >= 45 & age < 60 ~ "45-59",
age >= 60 ~ "60+"
))
ggplot(data = all %>% filter(age_category != "Under 18"), aes(x =
age_category, fill = told_had_bp)) +
geom_bar(position = "dodge")
ggplot(data = all %>% filter(age_category != "Under 18"),
aes(x = age_category, fill = told_had_bp)) +
geom_bar(position = "dodge") +
labs(title = "Hypertension Status by Age Category",
x = "Age Category",
y = "Number of Individuals",
fill = "Hypertension Status") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"))
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point() +
facet_grid(gender ~ told_had_bp)
ggplot(data = all, aes(x = bmi, y = weight, color = gender)) +
geom_point() +
stat_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(data = all, aes(x = bmi, y = weight, color=gender)) +
geom_point() +
coord_cartesian(xlim = c(15, 40), ylim = c(40, 150))
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point() +
theme_classic()
ggplot(data = all, aes(x = bmi, y = weight, color = gender)) +
geom_point() +
labs(
title = "Relationship Between BMI and Weight",
x = "BMI",
y = "Weight (kg)",
color = "Gender"
) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggsave("../Output/bmi_weight_scatter.png", width = 8, height = 6, dpi = 300)
# Calculate descriptive statistics
descr_stat <- all %>%
summarise(
mean_bmi = mean(bmi, na.rm = T),
sd_bmi = sd(bmi, na.rm = T),
iqr_bmi = IQR(bmi, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T),
iqr_age = IQR(age, na.rm = T)
)
# print
print(descr_stat)
# Calculate descriptive statistics
descr_stat_gender <- all %>%
group_by(gender) %>%
summarise(
mean_bmi = mean(bmi, na.rm = T),
sd_bmi = sd(bmi, na.rm = T),
iqr_bmi = IQR(bmi, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T),
iqr_age = IQR(age, na.rm = T)
)
# print
print(descr_stat_gender)
# Perform t-test to compare mean BMI between males and females
ttest_result <- t.test(bmi ~ gender, data = all, na.rm = T)
# Print the t-test result
print(ttest_result)
# Extract p-value from ANOVA summary directly
anova_p_value <- anova_summary[[1]]$`Pr(>F)`[1] # Extracting the p-value
# NOVA to compare mean age across BMI categories
anova_result <- aov(age ~ bmi_category, data = all)
# Print the ANOVA result
anova_summary <- summary(anova_result)
# Extract p-value from ANOVA summary directly
anova_p_value <- anova_summary[[1]]$`Pr(>F)`[1] # Extracting the p-value
if (anova_p_value < 0.05) {
post_hoc <- TukeyHSD(anova_result)
print(post_hoc)
} else {
cat("ANOVA is not statistically significant; no need for post-hoc analysis.\n")
}
# Contingency table for BMI category and blood pressure
contg_tb <- table(all$bmi_category, all$told_had_bp)
# Perform Chi-Square test
chi_square_result <- chisq.test(contg_tb)
# Print the Chi-Square test result
print(contg_tb)
# Contingency table for BMI category and blood pressure
contg_tb <- table(all$bmi_category, all$told_had_bp)
# Perform Chi-Square test
chi_square_result <- chisq.test(contg_tb)
# Print the Chi-Square test result
print(contg_tb)
# NOVA to compare mean age across BMI categories
anova_result <- aov(age ~ bmi_category, data = all)
# Print the ANOVA result
anova_summary <- summary(anova_result)
# NOVA to compare mean age across BMI categories
anova_result <- aov(age ~ bmi_category, data = all)
# Print the ANOVA result
anova_summary <- summary(anova_result)
print(anova_summary)
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point()
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point()
ggplot(data = all, aes(x = bmi, y = weight, colour = age)) +
geom_point(size = 3, shape = 16, alpha = 0.8) +
scale_colour_gradient(low = "skyblue", high = "darkblue") +
labs(title = "BMI vs Weight",
subtitle = "Coloured by Age",
x = "Body Mass Index (BMI)",
y = "Weight (kg)",
colour = "Age") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.title = element_text(face = "bold"))
all <- all %>%
mutate(age_category = case_when(
age < 18 ~ "Under 18",
age >= 18 & age < 30 ~ "18-29",
age >= 30 & age < 45 ~ "30-44",
age >= 45 & age < 60 ~ "45-59",
age >= 60 ~ "60+"
))
ggplot(data = all %>% filter(age_category != "Under 18"), aes(x =
age_category, fill = told_had_bp)) +
geom_bar(position = "dodge")
ggplot(data = all %>% filter(age_category != "Under 18"),
aes(x = age_category, fill = told_had_bp)) +
# Read Demo data for 2015 - 2016 Cycle
demo15_16 <- read_xpt("../Data/DEMO_I.XPT")%>%
clean_names()%>%
select(seqn, riagendr, ridageyr, ridreth1)  %>%
rename(gender=riagendr,
age = ridageyr,
race = ridreth1) %>%
mutate(race = factor(race, levels = c(1:5),
labels = c("mexican american", "other hispanic",
"non-hispanic white","non-hispanic black",
"other race - including multi-racial")))  %>%
mutate(gender=factor(gender, levels = c(1, 2), labels = c("male", "female")))  %>%
set_variable_labels(gender='Gender',
race='Race/Hispanic origin')
library(tidyverse)
library(janitor)
library(haven)
library(dplyr)
library(labelled)
# Read Demo data for 2015 - 2016 Cycle
demo15_16 <- read_xpt("../Data/DEMO_I.XPT")%>%
clean_names()%>%
select(seqn, riagendr, ridageyr, ridreth1)  %>%
rename(gender=riagendr,
age = ridageyr,
race = ridreth1) %>%
mutate(race = factor(race, levels = c(1:5),
labels = c("mexican american", "other hispanic",
"non-hispanic white","non-hispanic black",
"other race - including multi-racial")))  %>%
mutate(gender=factor(gender, levels = c(1, 2), labels = c("male", "female")))  %>%
set_variable_labels(gender='Gender',
race='Race/Hispanic origin')
# Read Demo data for 2017 - 2018 Cycle
demo17_18 <- read_xpt("../Data/DEMO_I.XPT") %>%
clean_names() %>%
select(seqn, riagendr, ridageyr, ridreth1)%>%
rename(gender=riagendr,
age = ridageyr,
race = ridreth1) %>%
mutate(race = factor(race, levels = c(1:5),
labels = c("mexican american", "other hispanic",
"non-hispanic white","non-hispanic black",
"other race - including multi-racial"))) %>%
mutate(gender=factor(gender, levels = c(1, 2), labels = c("male", "female"))) %>%
set_variable_labels(gender='Gender',
race='Race/Hispanic origin')
# Combine Demo
demo_all <- union(demo15_16, demo17_18)
# Read Demo data for 2015 - 2016 Cycle
demo15_16 <- read_xpt("../Data/DEMO_I.XPT")%>%
clean_names()%>%
select(seqn, riagendr, ridageyr, ridreth1)  %>%
rename(gender=riagendr,
age = ridageyr,
race = ridreth1) %>%
mutate(race = factor(race, levels = c(1:5),
labels = c("mexican american", "other hispanic",
"non-hispanic white","non-hispanic black",
"other race - including multi-racial")))  %>%
mutate(gender=factor(gender, levels = c(1, 2), labels = c("male", "female")))  %>%
set_variable_labels(gender='Gender',
race='Race/Hispanic origin')
# Read Demo data for 2017 - 2018 Cycle
demo17_18 <- read_xpt("../Data/DEMO_I.XPT") %>%
clean_names() %>%
select(seqn, riagendr, ridageyr, ridreth1)%>%
rename(gender=riagendr,
age = ridageyr,
race = ridreth1) %>%
mutate(race = factor(race, levels = c(1:5),
labels = c("mexican american", "other hispanic",
"non-hispanic white","non-hispanic black",
"other race - including multi-racial"))) %>%
mutate(gender=factor(gender, levels = c(1, 2), labels = c("male", "female"))) %>%
set_variable_labels(gender='Gender',
race='Race/Hispanic origin')
# Combine Demo
demo_all <- union(demo15_16, demo17_18)
# Read BP data for 2015 - 2016 Cycle
bpc15_16 <- read_xpt("../Data/BPQ_I.XPT")%>%
clean_names()%>%
select(seqn, bpq020)%>%
rename(told_had_bp=bpq020)%>%
mutate(told_had_bp=factor(told_had_bp, levels = c(1, 2),
labels = c("yes", "no"))) %>%
set_variable_labels(told_had_bp='Ever told you had high blood pressure')
# Read BP data for 2017 - 2018 Cycle
bpc17_18 <- read_xpt("../Data/BPQ_J.XPT")%>%
clean_names()%>%
select(seqn, bpq020)%>%
rename(told_had_bp=bpq020)%>%
mutate(told_had_bp=factor(told_had_bp, levels = c(1, 2),
labels = c("yes", "no")))%>%
set_variable_labels(told_had_bp='Ever told you had high blood pressure')
# Combine BP data
bpc_all <- union(bpc15_16, bpc17_18)
# Read BMI data for 2015 - 2016 Cycle
bmi15_16 <- read_xpt("../Data/BMX_I.XPT") %>%
clean_names()%>%
select(seqn, bmxwt, bmxht) %>%
rename(weight = bmxwt,
height = bmxht) %>%
mutate(bmi=weight/(height/100)^2)   %>%
mutate(bmi_category = case_when(
bmi < 18.5 ~ "underweight",
bmi >= 18.5 & bmi < 24.9 ~ "normal weight",
bmi >= 25 & bmi < 29.9 ~ "overweight",
bmi >= 30 ~ "obese"
))  %>%
set_variable_labels(bmi='Body mass index',
bmi_category='Categorical body mass index')
# Read BMI data for 2017 - 2018 Cycle
bmi17_18 <- read_xpt("../Data/BMX_J.XPT")  %>%
clean_names() %>%
select(seqn, bmxwt, bmxht) %>%
rename(weight = bmxwt,
height = bmxht)  %>%
mutate(bmi=weight/(height/100)^2)  %>%
mutate(bmi_category = case_when(
bmi < 18.5 ~ "underweight",
bmi >= 18.5 & bmi < 24.9 ~ "normal weight",
bmi >= 25 & bmi < 29.9 ~ "overweight",
bmi >= 30 ~ "obese"
)) %>%
set_variable_labels(bmi='Body mass index',
bmi_category='Categorical body mass index')
# Combine BMI data
bmi_all <- union(bmi15_16, bmi17_18)
# Combine all data
all <- demo_all %>%
left_join(bpc_all, by = "seqn") %>%
left_join(bmi_all, by = "seqn")
# Calculate descriptive statistics
descr_stat <- all %>%
summarise(
mean_bmi = mean(bmi, na.rm = T),
sd_bmi = sd(bmi, na.rm = T),
iqr_bmi = IQR(bmi, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T),
iqr_age = IQR(age, na.rm = T)
)
# print
print(descr_stat)
# Calculate descriptive statistics
descr_stat_gender <- all %>%
group_by(gender) %>%
summarise(
mean_bmi = mean(bmi, na.rm = T),
sd_bmi = sd(bmi, na.rm = T),
iqr_bmi = IQR(bmi, na.rm = T),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T),
iqr_age = IQR(age, na.rm = T)
)
# print
print(descr_stat_gender)
# Perform t-test to compare mean BMI between males and females
ttest_result <- t.test(bmi ~ gender, data = all, na.rm = T)
# Print the t-test result
print(ttest_result)
# NOVA to compare mean age across BMI categories
anova_result <- aov(age ~ bmi_category, data = all)
# Print the ANOVA result
anova_summary <- summary(anova_result)
# Perform adhoc if significant
# Extract p-value from ANOVA summary directly
anova_p_value <- anova_summary[[1]]$`Pr(>F)`[1] # Extracting the p-value
if (anova_p_value < 0.05) {
post_hoc <- TukeyHSD(anova_result)
print(post_hoc)
} else {
cat("ANOVA is not statistically significant; no need for post-hoc analysis.\n")
}
# Contingency table for BMI category and blood pressure
contg_tb <- table(all$bmi_category, all$told_had_bp)
# Perform Chi-Square test
chi_square_result <- chisq.test(contg_tb)
# Print the Chi-Square test result
print(contg_tb)
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point()
ggplot(data = all, aes(x = bmi, y = weight, colour = age)) +
geom_point(size = 3, shape = 16, alpha = 0.8) +
scale_colour_gradient(low = "skyblue", high = "darkblue") +
labs(title = "BMI vs Weight",
subtitle = "Coloured by Age",
x = "Body Mass Index (BMI)",
y = "Weight (kg)",
colour = "Age") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.title = element_text(face = "bold"))
all <- all %>%
mutate(age_category = case_when(
age < 18 ~ "Under 18",
age >= 18 & age < 30 ~ "18-29",
age >= 30 & age < 45 ~ "30-44",
age >= 45 & age < 60 ~ "45-59",
age >= 60 ~ "60+"
))
ggplot(data = all %>% filter(age_category != "Under 18"), aes(x =
age_category, fill = told_had_bp)) +
geom_bar(position = "dodge")
ggplot(data = all %>% filter(age_category != "Under 18"),
aes(x = age_category, fill = told_had_bp)) +
geom_bar(position = "dodge") +
labs(title = "Hypertension Status by Age Category",
x = "Age Category",
y = "Number of Individuals",
fill = "Hypertension Status") +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"))
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point() +
facet_grid(gender ~ told_had_bp)
ggplot(data = all, aes(x = bmi, y = weight, color = gender)) +
geom_point() +
stat_smooth(method = "lm", se = TRUE) +
theme_minimal()
ggplot(data = all, aes(x = bmi, y = weight, color=gender)) +
geom_point() +
coord_cartesian(xlim = c(15, 40), ylim = c(40, 150))
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point() +
theme_classic()
ggplot(data = all, aes(x = bmi, y = weight, color = gender)) +
geom_point() +
labs(
title = "Relationship Between BMI and Weight",
x = "BMI",
y = "Weight (kg)",
color = "Gender"
) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggsave("../Output/bmi_weight_scatter.png", width = 8, height = 6, dpi = 300)
saveRDS(all, "../Data/all_data.rds")
all <- readRDS("all_data.rds")
all <- readRDS("../Data/all_data.rds")
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point(aes(color = gender), alpha = 0.1 ,size = 3) + # Color
by gender, alpha for BMI intensity
View(all)
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point(aes(color = gender), alpha = 0.1 ,size = 3) +
stat_smooth(aes(color = gender), method = "lm", se = FALSE) +
scale_color_manual(
values = c("male" = "#377eb8", "female" = "#e41a1c"),
labels = c("Male", "Female")
) +
labs(x = "BMI", y = "Weight", color = "Gender") +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "italic")
)
library(ggplot)
library(ggplot2)
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point(aes(color = gender), alpha = 0.1 ,size = 3) +
stat_smooth(aes(color = gender), method = "lm", se = FALSE) +
scale_color_manual(
values = c("male" = "#377eb8", "female" = "#e41a1c"),
labels = c("Male", "Female")
) +
labs(x = "BMI", y = "Weight", color = "Gender") +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "italic")
)
all_filtered <- all %>%
filter(!is.na(smoking) & age_cat != "Under 18") %>%
group_by(age_cat, smoking) %>%
summarise(count = n()) %>%
group_by(age_cat) %>%
mutate(proportion = count / sum(count))
library(ggplot2, tidyverse)
all_filtered <- all %>%
filter(!is.na(smoking) & age_cat != "Under 18") %>%
group_by(age_cat, smoking) %>%
summarise(count = n()) %>%
group_by(age_cat) %>%
mutate(proportion = count / sum(count))
library(dplyr)
ggplot(data = all, aes(x = bmi, y = weight)) +
geom_point(aes(color = gender), alpha = 0.1 ,size = 3) +
stat_smooth(aes(color = gender), method = "lm", se = FALSE) +
scale_color_manual(
values = c("male" = "#377eb8", "female" = "#e41a1c"),
labels = c("Male", "Female")
) +
labs(x = "BMI", y = "Weight", color = "Gender") +
theme_minimal() +
theme(
legend.position = "top",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12, face = "italic")
)
all_filtered <- all %>%
filter(!is.na(smoking) & age_cat != "Under 18") %>%
group_by(age_cat, smoking) %>%
summarise(count = n()) %>%
group_by(age_cat) %>%
mutate(proportion = count / sum(count))
library(ggplot2, tidyverse, dplyr, haven, janitor)
install.packages("haven")
library(ggplot2, tidyverse, dplyr, haven, janitor)
library(haven)
# Read SMQ data for 2015 - 2016 Cycle
smq15_16 <- read_xpt("../Data/SMQ_I.XPT") %>%
clean_names() %>%
select(seqn, smq_var) %>% # replace `smq_var` with the actual variable name
mutate(smq_var = factor(smq_var, levels = c(1, 2), labels = c("yes", "no"))) %>%
set_variable_labels(smq_var = 'Label for SMQ variable')
smq15_16 <- read_xpt("../Data/SMQ_I.XPT")
View(smq15_16)
